(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"5c7e06d8db28ad16a2451575b1c043a7","url":"404.html"},{"revision":"421858b085fcf5fe2d0b8a8dfa6a5a03","url":"A-Introduction/introduction-testing.html"},{"revision":"50996664cbf80c208b548144f03f6ce0","url":"A-Introduction/need-for-testing-2.html"},{"revision":"53f7e9cdd992c29df11cd58802c26960","url":"A-Introduction/testing-types-3.html"},{"revision":"23b4d50eff62167156f358efde6c7ab8","url":"assets/css/styles.5ebce48d.css"},{"revision":"90fc5f6ad8bc241541cdbc6203daa976","url":"assets/js/033d8522.b148c40a.js"},{"revision":"ff92b058d23b0a8354a8287e88c1729d","url":"assets/js/0cc20c11.bb3b43ee.js"},{"revision":"94ab76f7e319caa09a959307f362a296","url":"assets/js/0e384e19.5e94ed22.js"},{"revision":"227ddd53549ef74077ab9f45f140205b","url":"assets/js/131.c1dc3065.js"},{"revision":"5cea1b7c241f93a8eeb35c8275b70d4d","url":"assets/js/17896441.0ebd858b.js"},{"revision":"397e08194b0b44d066151c48f4176688","url":"assets/js/1be78505.5edeb7f6.js"},{"revision":"f93c79b11a577a945df9d15b95a85fe6","url":"assets/js/283.65ff0ec1.js"},{"revision":"0b81a01b4c009e67d4f10740b53e3415","url":"assets/js/2a67ea02.9f3cdf48.js"},{"revision":"5f9fb2c51e85189d97cdfa65ea76136f","url":"assets/js/31106cd9.2435df8b.js"},{"revision":"e90a81cd0afb967722df709b9c8ef3f4","url":"assets/js/32f64b3f.50fe0e95.js"},{"revision":"cb6d2b9d032bf41b3c1852be869d3ccb","url":"assets/js/332.d82aad15.js"},{"revision":"1068a292da7190d3143db46c4332e71a","url":"assets/js/3bf68c06.04e1c120.js"},{"revision":"3fd5219cea9bead2b71d6ae7baf688c9","url":"assets/js/4119f2d8.2e649022.js"},{"revision":"f3bef8ce58c487f835298ddffd63637a","url":"assets/js/454d23da.7fa3da32.js"},{"revision":"a969c72913cd6772074ea5439376b6c0","url":"assets/js/46baab3b.3a34472c.js"},{"revision":"f04a6336ba8f12d6281ac027aed406c7","url":"assets/js/49283ecf.9ae9db45.js"},{"revision":"2ea1c0395973e537d2f8a816f1ab6a8a","url":"assets/js/5009a9ea.893750c8.js"},{"revision":"78d9cd78ab9df1eaabac8d9d98fee285","url":"assets/js/642e6986.8f997814.js"},{"revision":"bb5f0a2f4c671375cb98d1503bc1f202","url":"assets/js/667.9f652277.js"},{"revision":"4f93d5a12c3e742a9aa0478546e751f4","url":"assets/js/669ffbde.af7526d9.js"},{"revision":"4be4563ffd210b0fa375463c0540a758","url":"assets/js/6b794bdc.7656919b.js"},{"revision":"0dfd8b500116e7b67bf7a96ca1612ebb","url":"assets/js/75.b503c6c6.js"},{"revision":"fcf42ea8b18dea912bf1ee09901965ad","url":"assets/js/796ac481.f3eef97e.js"},{"revision":"5d3fbe63fba53af385c31b213cf34df2","url":"assets/js/7a733156.a8122f25.js"},{"revision":"42b8f704579ddd2841517f6f7a1e3f3a","url":"assets/js/7fa265d3.a9d31d41.js"},{"revision":"5b16c3e35fffd76ef10bc61c98ff7e42","url":"assets/js/808edb41.671a6207.js"},{"revision":"6dc1dfbcc1bab3f08262a9f512434390","url":"assets/js/814.0587e391.js"},{"revision":"23f3fd82dfdca8296b90f9c6605b358f","url":"assets/js/935f2afb.02254f8a.js"},{"revision":"126f537ddbe2b71b42071882384d595f","url":"assets/js/9e4087bc.1711b55a.js"},{"revision":"543f2ecabcd04ea832c919165f3c2e7f","url":"assets/js/a061199e.b7d5c0e6.js"},{"revision":"d411a4de9802c9ae01ea4cd55e511a51","url":"assets/js/b2f554cd.d1947f40.js"},{"revision":"3b29289a3057e1baa277547f3eee69e3","url":"assets/js/d0b52aaa.239fca5b.js"},{"revision":"c94ee0fcb6d2c8ba52e83ac9f921f6dc","url":"assets/js/e71759b6.8a1da455.js"},{"revision":"207df73220ea549fa0e43537e320c336","url":"assets/js/f18667f0.bb105496.js"},{"revision":"83e1954cfa84fe9d1a9bf3e47488fd1c","url":"assets/js/f3db08e4.5dd70809.js"},{"revision":"b2775a2c71fac772071b66be3d0aa85e","url":"assets/js/main.f2fe67bb.js"},{"revision":"a7cf24ed1618db95e685c573ad4d04e7","url":"assets/js/runtime~main.ff06dc85.js"},{"revision":"228e7d04c752dec0d317dc792358c3b9","url":"B-DataSelection2/data-selection-1.html"},{"revision":"d149df958bb9cb04917d2ad6c968fdd5","url":"blog/archive.html"},{"revision":"4e95b2e73b90ea1da0038dc08197132a","url":"C-UnitTesting/testing-coverage-3.html"},{"revision":"cef1a20e2e269d03b423b62a57fe59b0","url":"C-UnitTesting/unit-testing-1.html"},{"revision":"191018557d8a239fb5c1424bae9474f3","url":"C-UnitTesting/vs-test-2.html"},{"revision":"2b46cf7a597876fce8037acd1c43c503","url":"D-Debugging/debug-linux-5.html"},{"revision":"a1593aceca9f14fc77b48e8af977038e","url":"D-Debugging/debug-web-6.html"},{"revision":"18b0c8016afb1cc693cd33d965933bc1","url":"D-Debugging/debugging-techniques-1.html"},{"revision":"0779a440a19657ef3eb4cfcb35d92e76","url":"D-Debugging/other-langs-4.html"},{"revision":"30759a13d8b1e9a0975eee3de1c439b9","url":"D-Debugging/other-tools-3.html"},{"revision":"bbccbd29bfe1bddf0ef6fa3e44ac5a7b","url":"D-Debugging/vs-debugging-2.html"},{"revision":"6ff3f037f72b1199a3cca5f6ae18a1d9","url":"E-SDLC/SDLC-intro-1.html"},{"revision":"fd64a27e0e040b0a3f9326757edec817","url":"E-SDLC/STLC-3.html"},{"revision":"b34700b00d265d785282fa781af09d92","url":"E-SDLC/Testing-in-SDLC-2.html"},{"revision":"e85aebd5b8805551b5ad0b0402c9af3d","url":"F-QA/Jira-1.html"},{"revision":"ca95828a532747bb78cc562e9e993861","url":"F-QA/Jira-bug-report-7.html"},{"revision":"e04ab943e06ba4a863d39f4813bce546","url":"F-QA/QA-1.html"},{"revision":"feda84d6ff4d62b5b340211147b125ca","url":"F-QA/test-case-5.html"},{"revision":"f41d97baa13cf39d40f47fc48aa6f36c","url":"F-QA/test-plan-2.html"},{"revision":"1b22691cec7e66396df867e9efadc4dc","url":"F-QA/version-control-7.html"},{"revision":"d498c8ba9680f4d5bf77b737d3f227cf","url":"F-QA/workflow-9.html"},{"revision":"69918def3bfaf0cfc79843d49e0be613","url":"index.html"},{"revision":"fe169279a39fb8395b4218d093a9cddf","url":"manifest.json"},{"revision":"8b0a756e63e5aca0647355a0919df321","url":"assets/images/annotated-chrome-break-paused-2a3d57eac89ffb2d7bbd3b18812a3af8.jpg"},{"revision":"99d47b2e3464bd3342569aafc5d338f7","url":"assets/images/annotated-create-issue-3cffb2c008dd75fb53d9d9842b21d316.jpg"},{"revision":"a7492cadf3b3e10b32493558b8ce52e3","url":"assets/images/annotated-jira-edit-issue-3cd74c58bc427448ccd7f03f247b4277.jpg"},{"revision":"1621b723ea6cabbe04291bf08d0974b0","url":"assets/images/annotated-jira-screen-1-02f299fb44b2d2e312a04b1397bcb50b.jpg"},{"revision":"6e44c593e9667306fa7c09d5836b4eb8","url":"assets/images/chrome-debug-console-6548a8cace2dc60c779a8cf52bc1f4fd.jpg"},{"revision":"3e540a4f9e294b8bc426c68734955a57","url":"assets/images/chrome-debug-sources-858b2191a89057ae93e641fbb264daff.jpg"},{"revision":"a25e91c604f4341653bc3a56d8b9b1a0","url":"assets/images/continuous-integration-1-11dcdb2daaf0b3b702bd28c737bf143b.png"},{"revision":"ae67cc437584140a578fee52fd7648f6","url":"assets/images/cppcheck-project-1da623ca836e7f875fa03f8c7630eafb.jpg"},{"revision":"40e493e22866982a767a3a701bc7f221","url":"assets/images/cppcheck-result-1-0189ee2782eea01b11140c346aa1ecfc.jpg"},{"revision":"161b19765f028d1b85b745376971c23e","url":"assets/images/debug-process-edd06652f629ce7244c710854ef629bd.jpg"},{"revision":"a0f1624de1b21f692d1b80057f776bcb","url":"assets/images/function-spec-7f3eb76f2aa1670a52e9ecbead5d54d7.jpg"},{"revision":"9a3811d8a37a5ebc801df930ffd92695","url":"assets/images/git-cycle-ce2eacfc568594648bd1ab91f8ee3157.jpg"},{"revision":"d69953393948c664127676c5c0f5709e","url":"assets/images/git-file-cycle-764eb28c811d04dddb9083e0ab9589dd.jpg"},{"revision":"fb010aec142a7f85f1fee887b7c25b3c","url":"assets/images/git-repo-structure-291f6598f5c671a0cc9c53e447357aa2.jpg"},{"revision":"e963025798ae5e176f81fff6b16cff34","url":"assets/images/git-working-copy-cd70df2e4a7dc2a8888dc6586871049e.jpg"},{"revision":"00c86cacc1bbb585c219a1a384cfe1fa","url":"assets/images/iterative-model-3f84aafdb621d37fe8bc7a4f9513d6ba.jpg"},{"revision":"ea39e3acbbb41d65d7023dc7d2632cbf","url":"assets/images/jira-bug-report1-c79db6b2015754a91eef0bd2c8ce99f9.jpg"},{"revision":"fec5f80e99419fc17bc8c090082bc5c5","url":"assets/images/jira-bug-report2-0e05c4ac3dadfe6a510e18cb0940f212.jpg"},{"revision":"554cc88fa8eb188033bd8354d074653f","url":"assets/images/jira-issue-types-5851934ed35e3a1ce5a0b971bb74f7da.jpg"},{"revision":"d7a684c5363f3b5e251e71c6cf752852","url":"assets/images/kanban-board-user-2a5c9d8f50b78ab3bbb16e29cbbc229b.png"},{"revision":"f31cf7fd2ea94c80f4b6ad9ecc3027bd","url":"assets/images/memory-layout-171e44f428540081e34177f727790659.jpg"},{"revision":"1f976c2b6f71fd4fc5c8a732c96e30c9","url":"assets/images/ms-breakpoint-tab-fb44c09ba4c4f1a27d76ce4bcdb0c374.jpg"},{"revision":"a907fc21ec60f85d24fe2a889c64a45a","url":"assets/images/requirements-matrix-df1a70af95fef552893b661e38829a87.jpg"},{"revision":"4110a699553f4a83a0dff473da2ce3ef","url":"assets/images/separate-compilation-7f0ef244f342f439c836222fa32ed959.jpg"},{"revision":"fb4210069baea7ba60657d5b2abbf821","url":"assets/images/STLC-d7611880c4eb42ebb549c12f9132ea5b.png"},{"revision":"d37be23ede76366a467a3eb45f961c93","url":"assets/images/systems-development-life-cycle-5b15cd2eb264026a826b24c36e0580a5.png"},{"revision":"b702425c3ac74600c8aa4f8cb462c813","url":"assets/images/theme-epic-issue-76b8a7e8ee4d067c089c34d27b333575.jpg"},{"revision":"351f0dbdc91e24b2b70ed4febefa6de6","url":"assets/images/tortoise-coflict-editor-e0f051323fccbd0dca331ae9faefe5ac.jpg"},{"revision":"e1ec550a12ddda0f58a5a8ad2a04c403","url":"assets/images/tortoise-diff-d500aaac6b633f31a00876f5648f5c87.jpg"},{"revision":"38aa9b49df735989e4fe3e7b36727e35","url":"assets/images/tortoise-status-d7042fd8e1cb3b2991ff9141907abdda.jpg"},{"revision":"7910714e5905e2a93e1693792a6591dd","url":"assets/images/vs-add-lib-dirs-cd8522e8535a68e765f2655a1943d5d1.jpg"},{"revision":"6dceee16443771644f12847059760183","url":"assets/images/vs-breakpoint-settings-946030729613ca90302139583cf6a53c.jpg"},{"revision":"2fa14d8dde846143d8c0b74fed6f6fa0","url":"assets/images/vs-callstack-6b8ce9a46f078433541af04218ba064e.jpg"},{"revision":"1e4e3d98853f580b55a54eeb60df85d5","url":"assets/images/vs-create-unit-project-f845770b53cb17423f81819f61b8659f.jpg"},{"revision":"e3819507822ea8db31e8a99e9a39f678","url":"assets/images/vs-debug-annotated-1781b1c3b4510eb5cfe440ec6d9a3a6c.jpg"},{"revision":"875c7211c4239d97ea3cceb33f209d2c","url":"assets/images/vs-test-explorer-4ba01e6cf047a602a2e5f0ae5418391f.jpg"},{"revision":"c98281ac3c7a9dac5444d97d6fcd6047","url":"assets/images/vs-test-explorer-results-26a9fce28b92ec1ad494ce59cee5a32f.jpg"},{"revision":"ce6bbb4acee230b388b6e7f63b22b011","url":"assets/images/vs-test-include-0c8d6b5f1137ce798f90f6fbb5c72426.jpg"},{"revision":"b545cc36477d5fa66fbcae0e1ff89034","url":"assets/images/waterfall-model-7fb340a7d92f56bcb82ce3534e0d45ff.jpg"},{"revision":"36ec0f2db5b113005bc89bf931ab0eb2","url":"assets/images/workflow1-994092cf50ee281095bf974bd5003b0e.jpg"},{"revision":"8b0a756e63e5aca0647355a0919df321","url":"img/annotated-chrome-break-paused.jpg"},{"revision":"99d47b2e3464bd3342569aafc5d338f7","url":"img/annotated-create-issue.jpg"},{"revision":"a7492cadf3b3e10b32493558b8ce52e3","url":"img/annotated-jira-edit-issue.jpg"},{"revision":"1621b723ea6cabbe04291bf08d0974b0","url":"img/annotated-jira-screen-1.jpg"},{"revision":"266c0100dbb216b70b08ce8de6097211","url":"img/chrome-debug-break-paused.jpg"},{"revision":"6e44c593e9667306fa7c09d5836b4eb8","url":"img/chrome-debug-console.jpg"},{"revision":"3e540a4f9e294b8bc426c68734955a57","url":"img/chrome-debug-sources.jpg"},{"revision":"e74fccf74795df7bc7c38003ed1b2f36","url":"img/click-to-select-region.png"},{"revision":"a25e91c604f4341653bc3a56d8b9b1a0","url":"img/continuous-integration-1.png"},{"revision":"ae67cc437584140a578fee52fd7648f6","url":"img/cppcheck-project.jpg"},{"revision":"40e493e22866982a767a3a701bc7f221","url":"img/cppcheck-result-1.jpg"},{"revision":"976ad596cf84af604934072e39cad8fb","url":"img/create-issue-form.jpg"},{"revision":"161b19765f028d1b85b745376971c23e","url":"img/debug-process.jpg"},{"revision":"a866076bd1619b1e0a7941d108c25869","url":"img/desktop-computer.png"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"7f0f5c81147ea707d4b4fdca8befb1a7","url":"img/download-selected-region.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"a0f1624de1b21f692d1b80057f776bcb","url":"img/function-spec.jpg"},{"revision":"08673d0f8746d0504a6710de9e5c47a2","url":"img/git-branch.jpg"},{"revision":"9a3811d8a37a5ebc801df930ffd92695","url":"img/git-cycle.jpg"},{"revision":"d69953393948c664127676c5c0f5709e","url":"img/git-file-cycle.jpg"},{"revision":"fb010aec142a7f85f1fee887b7c25b3c","url":"img/git-repo-structure.jpg"},{"revision":"e963025798ae5e176f81fff6b16cff34","url":"img/git-working-copy.jpg"},{"revision":"b276738a91fcc2f05b024fe19bbc3b48","url":"img/github-collaborators.jpg"},{"revision":"c55e79de5b8ebb27454a35ea10eb54dd","url":"img/github-create-repo.jpg"},{"revision":"07ec6226da6a81c5f1fc304d4f3d376e","url":"img/github-login.jpg"},{"revision":"00c86cacc1bbb585c219a1a384cfe1fa","url":"img/iterative-model.jpg"},{"revision":"ea39e3acbbb41d65d7023dc7d2632cbf","url":"img/jira-bug-report1.jpg"},{"revision":"fec5f80e99419fc17bc8c090082bc5c5","url":"img/jira-bug-report2.jpg"},{"revision":"198ac0d028818ebe8fae20099845e329","url":"img/jira-edit-issue.jpg"},{"revision":"554cc88fa8eb188033bd8354d074653f","url":"img/jira-issue-types.jpg"},{"revision":"63da9fec042b1379c6253c79bd55300d","url":"img/jira-screen-1.jpg"},{"revision":"d7a684c5363f3b5e251e71c6cf752852","url":"img/kanban-board-user.png"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"f31cf7fd2ea94c80f4b6ad9ecc3027bd","url":"img/memory-layout.jpg"},{"revision":"1f976c2b6f71fd4fc5c8a732c96e30c9","url":"img/ms-breakpoint-tab.jpg"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"a907fc21ec60f85d24fe2a889c64a45a","url":"img/requirements-matrix.jpg"},{"revision":"80f4cfaf65b61dc3e5f8f540a8cf37c5","url":"img/result-of-converted-table.png"},{"revision":"4110a699553f4a83a0dff473da2ce3ef","url":"img/separate-compilation.jpg"},{"revision":"fb4210069baea7ba60657d5b2abbf821","url":"img/STLC.png"},{"revision":"d37be23ede76366a467a3eb45f961c93","url":"img/systems-development-life-cycle.png"},{"revision":"52fdbf1ab751f332a5ca688ec64b9bdd","url":"img/take-screenshot.png"},{"revision":"b702425c3ac74600c8aa4f8cb462c813","url":"img/theme-epic-issue.jpg"},{"revision":"3eceffd3ae96bf6def5363a1213c2477","url":"img/tortoise-cascade-menu.jpg"},{"revision":"351f0dbdc91e24b2b70ed4febefa6de6","url":"img/tortoise-coflict-editor.jpg"},{"revision":"e1ec550a12ddda0f58a5a8ad2a04c403","url":"img/tortoise-diff.jpg"},{"revision":"ca506035de55b7167acc6c72cb7e7e62","url":"img/tortoise-repo-top-menu.jpg"},{"revision":"38aa9b49df735989e4fe3e7b36727e35","url":"img/tortoise-status.jpg"},{"revision":"892e976746a7faf4759410a76ee59e89","url":"img/tortoise-top-menu.jpg"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"},{"revision":"7910714e5905e2a93e1693792a6591dd","url":"img/vs-add-lib-dirs.jpg"},{"revision":"6dceee16443771644f12847059760183","url":"img/vs-breakpoint-settings.jpg"},{"revision":"2fa14d8dde846143d8c0b74fed6f6fa0","url":"img/vs-callstack.jpg"},{"revision":"72a4e50b36ed81dc0f5705fa3003674b","url":"img/vs-continue-button.jpg"},{"revision":"1e4e3d98853f580b55a54eeb60df85d5","url":"img/vs-create-unit-project.jpg"},{"revision":"e3819507822ea8db31e8a99e9a39f678","url":"img/vs-debug-annotated.jpg"},{"revision":"573d5c4b04cf9e9d5a71cab997c9bc4c","url":"img/vs-debug-nomarkup.jpg"},{"revision":"1773181a7d84a5a693ef2ef959237786","url":"img/vs-restart-button.jpg"},{"revision":"b596b71e7f71c5c88c03195ce2d37c49","url":"img/vs-show-next-button.jpg"},{"revision":"fb24479b568c98f77612f9f7ae306be7","url":"img/vs-step-into-button.jpg"},{"revision":"4cc809a25a3307476bb1079f5fa771a4","url":"img/vs-step-out-button.jpg"},{"revision":"32bf66066814b59178e58a570e0f02eb","url":"img/vs-step-over-button.jpg"},{"revision":"210a8dbb62aa506033bde73420a38716","url":"img/vs-stop-button.jpg"},{"revision":"c98281ac3c7a9dac5444d97d6fcd6047","url":"img/vs-test-explorer-results.jpg"},{"revision":"875c7211c4239d97ea3cceb33f209d2c","url":"img/vs-test-explorer.jpg"},{"revision":"ce6bbb4acee230b388b6e7f63b22b011","url":"img/vs-test-include.jpg"},{"revision":"b545cc36477d5fa66fbcae0e1ff89034","url":"img/waterfall-model.jpg"},{"revision":"36ec0f2db5b113005bc89bf931ab0eb2","url":"img/workflow1.jpg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();