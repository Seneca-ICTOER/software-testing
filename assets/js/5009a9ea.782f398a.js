"use strict";(self.webpackChunksft211=self.webpackChunksft211||[]).push([[477],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),h=c(n),m=a,d=h["".concat(l,".").concat(m)]||h[m]||p[m]||i;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8583:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return h}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],o={id:"STLC-3",title:"Software Testing Life Cycle",sidebar_position:3,description:"Describes the software testing life cycle."},l="The Software Testing Life Cycle",c={unversionedId:"E-SDLC/STLC-3",id:"E-SDLC/STLC-3",isDocsHomePage:!1,title:"Software Testing Life Cycle",description:"Describes the software testing life cycle.",source:"@site/docs/E-SDLC/STLC-3.md",sourceDirName:"E-SDLC",slug:"/E-SDLC/STLC-3",permalink:"/E-SDLC/STLC-3",editUrl:"https://github.com/Seneca-ICTOER/software-testing/tree/main/docs/E-SDLC/STLC-3.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"STLC-3",title:"Software Testing Life Cycle",sidebar_position:3,description:"Describes the software testing life cycle."},sidebar:"courseNotesSidebar",previous:{title:"Testing in the Life Cycle",permalink:"/E-SDLC/Testing-in-SDLC-2"},next:{title:"Quality Assurance",permalink:"/F-QA/QA-1"}},u=[{value:"STLC Phases",id:"stlc-phases",children:[{value:"Requirements Analysis",id:"requirements-analysis",children:[{value:"Requirements Traceability Matrix",id:"requirements-traceability-matrix",children:[],level:4}],level:3},{value:"Test Planning",id:"test-planning",children:[],level:3},{value:"Test case development",id:"test-case-development",children:[],level:3},{value:"Test Environment Setup",id:"test-environment-setup",children:[],level:3},{value:"Test Execution",id:"test-execution",children:[],level:3},{value:"Test Cycle Closure",id:"test-cycle-closure",children:[],level:3}],level:2}],p={toc:u};function h(e){var t=e.components,o=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-software-testing-life-cycle"},"The Software Testing Life Cycle"),(0,i.kt)("p",null,"The software testing lifecycle (STLC) lays out a series of steps to create and execute software tests. It is analogous to the software development lifecycle which lays out a series of steps to plan and develop software artifacts."),(0,i.kt)("p",null,"The benefits of using the STLC include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It provides a guide for the testing process, increasing efficiency and consistency,"),(0,i.kt)("li",{parentName:"ul"},"It clearly defines the expectations of each part of the project,"),(0,i.kt)("li",{parentName:"ul"},"It can provide time constraints on the testing,"),(0,i.kt)("li",{parentName:"ul"},"Ensures that software meets requirements before more software is developed,"),(0,i.kt)("li",{parentName:"ul"},"Ensures that all project requirements are met.")),(0,i.kt)("p",null,"The major steps in the software testing lifecycle are shown in the following diagram."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"&quot;Software Testing Life Cycle&quot; ",src:n(7835).Z})),(0,i.kt)("h2",{id:"stlc-phases"},"STLC Phases"),(0,i.kt)("p",null,"We will now look at each of the phases of the STLC in depth."),(0,i.kt)("h3",{id:"requirements-analysis"},"Requirements Analysis"),(0,i.kt)("p",null,"As the project requirements are identified, these requirements are examined to identify their testable aspects. The requirements can be either functional or non-functional and we will identify what needs to be tested for each of the requirements."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"}," Entry Criteria"))," - A set of requirements and acceptance criteria for the requirements."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit Criteria"))," - Requirements traceability matrix and an automation feasibility report. The traceability matrix will show how each test relates to each requirement while the automation feasibility report will layout the plans and possibility of automating the testing."),(0,i.kt)("h4",{id:"requirements-traceability-matrix"},"Requirements Traceability Matrix"),(0,i.kt)("p",null,"Traceability is important in large projects. For example, one aircraft software system had a requirements document that ran to 800 pages. There are two problems that need to be addressed in projects of this size:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensuring that software has been written to implement each of the requirements,"),(0,i.kt)("li",{parentName:"ul"},"Ensuring that tests have been developed to test all of the software written for each requirement.")),(0,i.kt)("p",null,"The following is an example of a requirements traceability matrix."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"&quot;Requirements Traceability Matrix&quot; ",src:n(3839).Z})),(0,i.kt)("p",null,"The matrix lists the business requirements across the top and the tests down the left side. The ",(0,i.kt)("strong",{parentName:"p"},"x"),"'s in the matrix indicate that the tests are associated with the requirements. This let's you easily see which tests apply to which requirements and vice versa. The table allows you to do ",(0,i.kt)("em",{parentName:"p"},"forward traceability")," where you look up a requirement and find the related tests as well as ",(0,i.kt)("em",{parentName:"p"},"reverse traceability")," where you look up a test and see the associated requirements."),(0,i.kt)("h3",{id:"test-planning"},"Test Planning"),(0,i.kt)("p",null,"The test planning phase produces the test plan document. This document includes the testing strategy, the testing steps, the tools needed for the testing, and the roles and responsibilities in the quality assurance team. It also provides an estimated timeline for the testing"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Entry criteria"))," - the requirements analysis and requirements test matrix,"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit criteria"))," - an approved test plan."),(0,i.kt)("h3",{id:"test-case-development"},"Test case development"),(0,i.kt)("p",null,"It is during this phase that the actual test cases are created each test case defines:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Input data for the test case,"),(0,i.kt)("li",{parentName:"ul"},"The actual code for the test,"),(0,i.kt)("li",{parentName:"ul"},"Procedures for executing the test case,"),(0,i.kt)("li",{parentName:"ul"},"Anticipated results of the test case.")),(0,i.kt)("p",null,"It is during this phase that automation scripts will be created if they are needed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Entry criteria"))," - an approved test plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit criteria"))," - approved test cases, test data, and automation scripts if needed."),(0,i.kt)("h3",{id:"test-environment-setup"},"Test Environment Setup"),(0,i.kt)("p",null,"It is during this phase that the test environment is set up. This might include testing tools, integration with version control systems, and any other hardware and software necessary to conduct the testing."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Entry criteria"))," - system design and project architecture."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit criteria"))," - a functional test environment."),(0,i.kt)("h3",{id:"test-execution"},"Test Execution"),(0,i.kt)("p",null,"During the test execution phase, the tests are deployed into the testing environment and then are executed using the input data. The expected test results are compared to the actual results and gathered to create a report which was sent to the development team."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Entry criteria")),"- all of the exit criteria from the previous steps."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit criteria"))," - all of the tests have been performed and test reports have been generated."),(0,i.kt)("h3",{id:"test-cycle-closure"},"Test Cycle Closure"),(0,i.kt)("p",null,"This is the final phase of the STLC and it results in a report which summarizes the results of all the tests which were carried out. The report should contain:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A summary of the entire testing process,"),(0,i.kt)("li",{parentName:"ul"},"A list of tests that failed along with the comparison of the expected results and the actual results,"),(0,i.kt)("li",{parentName:"ul"},"the time taken to conduct the testing,"),(0,i.kt)("li",{parentName:"ul"},"the total costs of the testing,"),(0,i.kt)("li",{parentName:"ul"},"The test coverage,"),(0,i.kt)("li",{parentName:"ul"},"and a description of the defects found.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Entry Criteria"))," - test results and reports."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Exit criteria"))," - test closure report."))}h.isMDXComponent=!0},7835:function(e,t,n){t.Z=n.p+"assets/images/STLC-d7611880c4eb42ebb549c12f9132ea5b.png"},3839:function(e,t,n){t.Z=n.p+"assets/images/requirements-matrix-df1a70af95fef552893b661e38829a87.jpg"}}]);